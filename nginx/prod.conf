# server {
#     listen 443 ssl;
#     server_name api.quizabble.com;

#     ssl_certificate /etc/letsencrypt/live/api.quizabble.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.quizabble.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;

#     location /socket.io {
#         proxy_pass http://node_app:8081/socket.io;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 3600;
#         proxy_send_timeout 3600;
#         proxy_buffering off;
#         proxy_request_buffering off;
#     }

#     location / {
#         proxy_pass http://node_app:8081;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 60m;
#         proxy_send_timeout 60m;
#         proxy_buffering off;
#     }
# }

server {
    listen 80;
    server_name api.quizabble.com;

    # Serve the challenge files from /var/www/certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # For now, do NOT force redirect to HTTPS. Comment out if you have a `return 301` line.
    # location / {
    #     return 301 https://$host$request_uri;
    # }
    
    # Optionally, you could just serve a basic index for testing:
    location / {
      return 200 "Nginx is up on port 80!";
    }
}

